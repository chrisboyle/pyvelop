name: Build & Release

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9][0-9][0-9][0-9].[1-9][0-2]?.[0-9]+"

run-name: "Build and release ${{ github.ref_name }}"

env:
  PACKAGE_NAME: pyvelop
  ARTIFACT_PATH: artifacts
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Verify version
        run: |
          CONST_VERSION=$(grep -oP '^_PACKAGE_VERSION:.*$' ${{env.PACKAGE_NAME}}/const.py | grep -oP '[0-9]{4}\.[1-9]+[1-2]*\.[0-9]+')
          if [ "$GITHUB_REF_NAME" != "$CONST_VERSION" ]; then
            echo "Version in code ($CONST_VERSION) doesn't match git version tag ($GITHUB_REF_NAME)!"
            exit 1
          fi
          
      - name: Install prereqs
        run: |
          python -m pip install aiohttp build Sphinx sphinx-rtd-theme

      - name: Build distribution packages
        run: |
          python -m build --outdir ${{ env.ARTIFACT_PATH }}

      - name: Build & clean documentation
        run: |
          sphinx-build --builder html --doctree-dir .doctrees --fresh-env --write-all docs/source docs/build
          cd docs/build
          zip -r "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}-help.zip" *.html *.js _static
          mv "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}-help.zip" "../../${{ env.ARTIFACT_PATH }}"

      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        id: upload_artifact
        with:
          name: "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}"
          path: "${{ env.ARTIFACT_PATH }}"
          if-no-files-found: error
          retention-days: 1
          
  release:
    name: Create release
    needs: 
      - build
    runs-on: ubuntu-latest
      
    steps:
        - name: Download artifacts
          uses: actions/download-artifact@v4

        - name: Unzip artifacts
          run: |
            unzip *.zip

        - name: Delete downloaded artifact
          run: |
            rm "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}.zip"

        - name: Create release
          uses: softprops/action-gh-release@v2
          with:
            draft: true
            files: |
              *.zip
            generate_release_notes: true